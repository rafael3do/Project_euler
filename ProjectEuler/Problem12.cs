using System;

namespace ProjectEuler
{
    /// <summary>
    /// The sequence of triangle numbers is generated by adding the natural numbers. 
    /// So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten 
    /// terms would be:1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
    /// Let us list the factors of the first seven triangle numbers:
    /// We can see that 28 is the first triangle number to have over five divisors.
    /// What is the value of the first triangle number to have over five hundred divisors?
    /// Program running time >15 min from print 
    /// </summary>
    class Problem12
    {

        static void Main(string[] args)
        {
            int length = 1;
            bool isFound = false;
            int divCount = 500;
            while (isFound == false)
            {
                int triNum = 0;
                int factorsCount = 0;
                for (int i = 1; i <= length; i++)
                {
                    triNum += i;
                }
                for (int i = 1; i <= triNum; i++)
                {
                    if (triNum % i == 0)
                    {
                        factorsCount += 1;
                        if (factorsCount > divCount)
                        {
                            Console.WriteLine(factorsCount);
                            Console.WriteLine(triNum);
                            isFound = true;
                            break;
                        }
                    }
                }
                length += 1;
            }
            Console.WriteLine("End");
            Console.ReadKey();
        }   
        
    }
}
